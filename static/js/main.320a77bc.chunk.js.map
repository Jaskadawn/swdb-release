{"version":3,"sources":["components/ResourceFilter.js","components/ResourceSorter.js","components/CategoryItemList.js","components/CategoryButton.js","components/CategoryButtons.js","components/ItemDisplay.js","containers/App.js","serviceWorker.js","index.js"],"names":["ResourceFilter","_ref","disabled","inputHandler","react_default","a","createElement","className","onInput","type","ResourceSorter","CategoryItemList","items","onItemChange","map","item","i","key","onClick","Object","values","CategoryButton","category","clickHandler","mouseUpHandler","classes","selected","onMouseUp","CategoryButtons","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setSelectedButton","event","setState","selectedButton","target","textContent","state","_this2","buttons","keys","categories","src_components_CategoryButton","Component","ItemDisplay","caption","asd","forEach","val","console","log","push","replace","baseUrl","App","onResourceSelected","asyncToGenerator","regenerator_default","mark","_callee","resourceName","wrap","_context","prev","next","value","fetchResource","stop","_x","apply","arguments","setSelectedItem","id","newItem","resourceData","selectedItem","filterItems","filter","_callee2","data","_context2","isLoading","resourceCount","fetch","then","response","json","sent","results","toConsumableArray","resources","_this$state","filteredItems","toLowerCase","includes","length","emptyData","src_components_CategoryButtons","style","color","src_components_ResourceFilter","src_components_ResourceSorter","display","justifyContent","src_components_CategoryItemList","src_components_ItemDisplay","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.320a77bc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ResourceFilter.css';\r\n\r\nconst ResourceFilter = ({ disabled, inputHandler }) => {\r\n  return (\r\n    <div className=\"ResourceFilter\">\r\n      <label>Search:</label>\r\n      <input onInput={inputHandler} type=\"text\" disabled={disabled} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourceFilter;\r\n","import React from 'react';\r\n\r\nimport './ResourceSorter.css';\r\n\r\nconst ResourceSorter = ({ disabled }) => {\r\n  return (\r\n    <div className=\"ResourceSorter\">\r\n      <label>Sort:</label>\r\n      <select disabled={disabled}>\r\n        <option>Asdsd</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResourceSorter;\r\n","import React from 'react';\r\n\r\nimport './CategoryItemList.css';\r\n\r\nconst CategoryItemList = ({ items, onItemChange }) => {\r\n  return (\r\n    <ul className=\"CategoryItemList\">\r\n      {items.map((item, i) => (\r\n        <li key={i}>\r\n          <button onClick={onItemChange(i)}>{Object.values(item)[0]}</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CategoryItemList;\r\n","import React from 'react';\r\nimport './CategoryButton.css';\r\n\r\nconst CategoryButton = ({\r\n  category,\r\n  clickHandler,\r\n  mouseUpHandler,\r\n  selected\r\n}) => {\r\n  const classes = selected ? 'CategoryButton selected' : 'CategoryButton';\r\n  return (\r\n    <button\r\n      className={classes}\r\n      onMouseUp={mouseUpHandler}\r\n      onClick={clickHandler}\r\n    >\r\n      {category}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CategoryButton;\r\n","import React, { Component } from 'react';\r\nimport CategoryButton from './CategoryButton';\r\n\r\nimport './CategoryButtons.css';\r\n\r\nclass CategoryButtons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { selectedButton: null };\r\n  }\r\n\r\n  setSelectedButton = event => {\r\n    this.setState({ selectedButton: event.target.textContent });\r\n  };\r\n\r\n  render() {\r\n    const buttons = Object.keys(this.props.categories).map((category, i) => {\r\n      return (\r\n        <CategoryButton\r\n          key={i}\r\n          category={category}\r\n          selected={this.state.selectedButton === category}\r\n          clickHandler={this.props.clickHandler(category)}\r\n          mouseUpHandler={this.setSelectedButton}\r\n        />\r\n      );\r\n    });\r\n\r\n    return <div className=\"CategoryButtons\">{buttons}</div>;\r\n  }\r\n}\r\n\r\nexport default CategoryButtons;\r\n","import React from 'react';\r\n\r\nimport './ItemDisplay.css';\r\n\r\nconst ItemDisplay = ({ item }) => {\r\n  if (item === null) {\r\n    return <div />;\r\n  }\r\n  let asd = [];\r\n  let caption;\r\n  const keys = Object.keys(item);\r\n  keys.forEach((key, i) => {\r\n    const val = item[key];\r\n    if (i === 0) {\r\n      caption = val;\r\n    } else {\r\n      console.log(val);\r\n      asd.push(\r\n        <tr key={i}>\r\n          <td>{key.replace('_', ' ') + ':'}</td>\r\n          <td>{val}</td>\r\n        </tr>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"ItemDisplay\">\r\n      <table>\r\n        <caption>{caption}</caption>\r\n        <tbody>{asd}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst isUrl = s => {\r\n  var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/;\r\n  return regexp.test(s);\r\n};\r\n\r\nexport default ItemDisplay;\r\n","import React, { Component } from 'react';\nimport ResourceFilter from '../components/ResourceFilter';\nimport ResourceSorter from '../components/ResourceSorter';\nimport ResourceContainer from '../components/ResourceContainer';\nimport CategoryItemList from '../components/CategoryItemList';\nimport CategoryButtons from '../components/CategoryButtons';\nimport ItemDisplay from '../components/ItemDisplay';\n\nimport './App.css';\n\nconst baseUrl = 'https://swapi.co/api/';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      resources: {},\n      resourceCount: 0,\n      resourceName: '',\n      resourceData: [],\n      isLoading: false,\n      selectedItem: null,\n      filter: ''\n    };\n  }\n\n  onResourceSelected = async event => {\n    const resourceName = event.target.value;\n    this.setState({ resourceName });\n    this.fetchResource(resourceName);\n  };\n\n  setSelectedItem = id => () => {\n    const newItem = this.state.resourceData[id];\n    this.setState({ selectedItem: newItem });\n  };\n\n  filterItems = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  fetchResource = resourceName => {\n    return async () => {\n      this.setState({\n        isLoading: true,\n        resourceCount: 0,\n        selectedItem: null,\n        resourceData: []\n      });\n      let resourceData = await fetch(baseUrl + resourceName)\n        .then(response => response.json())\n        .then(response => response);\n      const data = resourceData.results;\n      while (resourceData.next) {\n        resourceData = await fetch(resourceData.next)\n          .then(response => response.json())\n          .then(response => response);\n        data.push(...resourceData.results);\n      }\n      this.setState({\n        resourceData: data,\n        isLoading: false\n      });\n    };\n  };\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    await fetch(baseUrl)\n      .then(response => response.json())\n      .then(data => this.setState({ resources: data, isLoading: false }));\n  }\n\n  render() {\n    const {\n      resources,\n      resourceName,\n      resourceData,\n      isLoading,\n      selectedItem,\n      filter\n    } = this.state;\n    const filteredItems = resourceData.filter(item =>\n      Object.values(item)[0]\n        .toLowerCase()\n        .includes(filter.toLowerCase())\n    );\n    const disabled = resourceData.length === 0 ? true : false;\n    const emptyData = resourceData.length === 0;\n\n    return (\n      <div>\n        <div className=\"ResourceControls\">\n          <h1>\n            @ <span>DB</span>\n          </h1>\n          <CategoryButtons\n            categories={resources}\n            clickHandler={this.fetchResource}\n          />\n          {/* Enable filtering and sorting if there is data, */}\n          {emptyData ? (\n            <p style={{ color: 'red' }}>Start by selecting a category</p>\n          ) : (\n            [\n              <ResourceFilter\n                disabled={disabled}\n                inputHandler={this.filterItems}\n              />,\n              <ResourceSorter disabled={disabled} />\n            ]\n          )}\n        </div>\n        <div style={{ display: 'flex', justifyContent: 'flex-start' }}>\n          <CategoryItemList\n            items={filteredItems}\n            onItemChange={this.setSelectedItem}\n          />\n\n          <ItemDisplay item={selectedItem} />\n        </div>\n        <footer>Developed by: Jaakko Ikäheimo</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}